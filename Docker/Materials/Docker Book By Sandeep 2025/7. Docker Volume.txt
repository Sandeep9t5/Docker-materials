Docker Volume:
================================

 Volume is simply a directory inside our container.
 Finally, we have to declare this directory as a volume and then share volume.
 Even if we stop the container still, we can access volume.
 Volume will be created in one container.
 You can declare a directory as a volume only while creating container.
 You can’t create volume from existing container.
 You can share one volume a cross any number of containers.
 Volume will not be included when you update an image.


 You can map volume in two ways:

a. Container to container
b. Host to container 


Benefits of Volume:

 Decoupling container from storage.
 Share volume among different containers.
 Attach volume to containers.
 On deleting container volume doesn’t  delete.


**************************************************************************************************************************


Volumes ( Container ---->  Container  )



Method -1  Creating Volume from Dockerfile:-  BY Docker file
===============================================================


Create a Dockerfile and add instructions
============================================

FROM ubuntu
VOLUME  [“/myvolume”]


Then create image from this Dockerfile 
============================================


# docker  build -t  myimage  .                   {t -tag}


Now create a container from this image 
====================================================


# docker  run   -it  --name  container1  myimage/bin/bash 
Now do ls, you can see myvolume.



Now share volume with another container
===================================================

 Container to container

docker  run  -it  --name  container2(new)   --privileged=true --volumes  from  container1 ubuntu  /bin/bash


Now after creating container2, myvolume is visible. Whatever you do in one volume, can see from other volume.

# touch  /myvolume/samplefile 
# docker start container1
# dockerattachcontainer1 
# ls/myvolume



You can see sample file here then exit.



Method -2    BY Console commands
===============================================================================================


Now create volume by using command:
=====================================


# docker  run  -it  --name  container3  -v   /volume2   ubuntu /bin/bash 
# ls
# cd  volume2

Now create some file and exit

# touch file1  file2  file3

 

Now create one more container and share volume2
====================================================


# docker run -it  --name container4 --privileged=true  --volume from container3    ubuntu/bin/bash

Now you re inside container do ls you can see volume2

# ls
# cd  volume2
# ls

Now create one file inside this volume and then check incontainer3 you can see that file.

# touch  filea   fileb   filec
Exit

# docker  start container3
# docker  attach container3
# ls
# cd  volume2
# ls




****************************************************************************************************************************


Volumes ( Host ---->  Container  )
============================================

Verify files in /home/ec2-user

#docker  run   -it  --name  hostcontainer   -v  /home/ec2-user:/rajput    --privileged=true    ubuntu  /bin/bash
#ls
Do ls, now you can see all file so fhost machine. 
#touch contanerfile (in container) and exit
Nowcheck in EC2 machineyoucan seethis abovefile.



********************************************************************************************************

Some other commands:
============================


# docker  volume  ls
# docker volume create <volume name> 
# docker volume rm <volume name>
# docker volume prune (it removes all unused docker volume)
# docker volume inspect  <volume name>
# docker container inspect <container name>
